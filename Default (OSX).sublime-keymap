[
  { "keys": ["super+;"], "command": "open_file", "args": { "file": "${packages}/User/Default (OSX).sublime-keymap" } },
  { "keys": ["super+shift+,"], "command": "open_file", "args": { "file": "${packages}/Default/Preferences.sublime-settings" } },
  { "keys": ["super+shift+;"], "command": "open_file", "args": { "file": "${packages}/Default/Default (OSX).sublime-keymap" } },

  { "keys": ["alt+shift+tab"], "command": "indent" },
  { "keys": ["super+k", "tab"], "command": "reindent" },

  { "keys": ["super+v"], "command": "paste_and_indent" },
  { "keys": ["super+shift+v"], "command": "paste" },

  { "keys": ["super+m"], "command": "close_other_tabs" },
  { "keys": ["super+k", "super+backspace"], "command": "close_other_tabs_to_left" },
  { "keys": ["super+k", "super+shift+backspace"], "command": "close_other_tabs_to_right" },

  { "keys": ["super+shift+m"], "command": "close_other_windows" },

  { "keys": ["super+k", "super+q", "super+a"], "command": "close_all" },
  {
    "keys": ["super+k", "super+q", "super+alt+a"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "restore_layout", "args": { "nickname": "cero" }, "context": "window" },
        { "command": "close_all", "context": "window" }
      ]
    }
  },
  {
    "keys": ["super+k", "super+alt+q"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "close_other_windows", "context": "window" },
        { "command": "restore_layout", "args": { "nickname": "cero" }, "context": "window" },
        { "command": "close_all", "context": "window" }
      ]
    }
  },

  { "keys": ["super+k", "super+m", "super+,"], "command": "restore_layout", "args": { "nickname": "cero" } },

  { "keys": ["super+k", "super+w", "super+a"], "command": "close_all_in_active_group" },
  { "keys": ["super+k", "super+w", "super+alt+a"], "command": "close_active_group_and_tabs" },

  { "keys": ["super+k", "super+m", "super+a"], "command": "close_all_in_other_groups" },
  {
    "keys": ["super+k", "super+m", "super+alt+a"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "close_all_in_other_groups", "context": "window" },
        { "command": "restore_layout", "args": { "nickname": "cero" }, "context": "window" }
      ]
    }
  },

  { "keys": ["ctrl+alt+up"], "command": "scroll_lines_enhanced", "args": { "amount": -2 } },
  { "keys": ["ctrl+alt+down"], "command": "scroll_lines_enhanced", "args": { "amount": 2 } },

  { "keys": ["ctrl+alt+shift+up"], "command": "scroll_width", "args": { "amount": -2 } },
  { "keys": ["ctrl+alt+shift+down"], "command": "scroll_width", "args": { "amount": 2 } },

  { "keys": ["super+k", "s", "s"], "command": "toggle_sync_scroll" },

  {
    "keys": ["shift+alt+down"],
    "command": "find_in_files_jump_file",
    "args": { "wrap": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files" }
    ]
  },
  {
    "keys": ["shift+alt+up"],
    "command": "find_in_files_jump_file",
    "args": { "forward": false, "wrap": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files" }
    ]
  },
  {
    "keys": ["alt+down"],
    "command": "find_in_files_jump_match",
    "args": { "wrap": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files" }
    ]
  },
  {
    "keys": ["alt+up"],
    "command": "find_in_files_jump_match",
    "args": { "forward": false, "wrap": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files" }
    ]
  },

  { "keys": ["ctrl+alt+m"], "command": "move_to_quotes" },
  { "keys": ["ctrl+alt+shift+m"], "command": "move_to_quotes", "args": { "expand": true } },

  {
    "keys": ["alt+up", "up"],
    "command": "jump_prev_indent",
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+shift+up", "up"],
    "command": "jump_prev_indent",
    "args": { "extend_selection": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+down", "down"],
    "command": "jump_next_indent",
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+shift+down", "down"],
    "command": "jump_next_indent",
    "args": { "extend_selection": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },

  {
    "keys": ["alt+up", "alt+up"],
    "command": "move",
    "args": { "by": "stops", "empty_line": true, "forward": false },
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+shift+up", "alt+up"],
    "command": "expand_selection_to_empty_line",
    "args": { "forward": false },
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+down", "alt+down"],
    "command": "move",
    "args": { "by": "stops", "empty_line": true, "forward": true },
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },
  {
    "keys": ["alt+shift+down", "alt+down"],
    "command": "expand_selection_to_empty_line",
    "context": [
        {"key": "selector", "operand": "text.find-in-files", "operator": "not_equal" }
    ]
  },

  {
    "keys": ["&"],
    "command": "insert",
    "args": { "characters": "1" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["é"],
    "command": "insert",
    "args": { "characters": "2" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["\""],
    "command": "insert",
    "args": { "characters": "3" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["'"],
    "command": "insert",
    "args": { "characters": "4" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["("],
    "command": "insert",
    "args": { "characters": "5" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["§"],
    "command": "insert",
    "args": { "characters": "6" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["è"],
    "command": "insert",
    "args": { "characters": "7" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["!"],
    "command": "insert",
    "args": { "characters": "8" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["ç"],
    "command": "insert",
    "args": { "characters": "9" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },
  {
    "keys": ["à"],
    "command": "insert",
    "args": { "characters": "0" },
    "context": [
      { "key": "overlay_visible" },
      { "key": "preceding_text", "operator": "regex_contains", "operand": ":" }
    ]
  },

  {
    "keys": ["alt+left"],
    "command": "transpose_selection",
    "context": [
      { "key": "selection_empty", "operand": false },
    ]
  },
  {
    "keys": ["alt+right"],
    "command": "transpose_selection",
    "context": [
      { "key": "selection_empty", "operand": false },
    ]
  },

  {
    "keys": ["tab"],
    "command": "move",
    "args": { "by": "characters", "forward": true },
    "context": [
      { "key": "following_text", "operator": "regex_contains", "operand": "^[)`'\"’”›»>\\]}]", "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[(`'\"‘“‹«<\\[{]", "match_all": true },
      { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin" },
      { "key": "auto_complete_visible", "operator": "equal", "operand": false },
      { "key": "selection_empty", "operand": true, "match_all": true }
    ]
  },
  {
    "keys": ["shift+tab"],
    "command": "move",
    "args": { "by": "characters", "forward": false },
    "context": [
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[)`'\"’”›»>\\]}]$", "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "[(`'\"‘“‹«<\\[{]", "match_all": true },
      { "key": "auto_complete_visible", "operator": "equal", "operand": false },
      { "key": "selection_empty", "operand": true, "match_all": true }
    ]
  },

  {
    "keys": ["\""],
    "command": "insert",
    "args": { "characters": "\"" },
    "context": [
      { "key": "selection_empty", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
      { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
    ]
  },
  {
    "keys": ["'"],
    "command": "insert",
    "args": { "characters": "'" },
    "context": [
      { "key": "selection_empty", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
      { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
    ]
  },
  {
    "keys": [")"],
    "command": "insert",
    "args": { "characters": ")" },
    "context": [
      { "key": "selection_empty", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
    ]
  },
  {
    "keys": ["]"],
    "command": "insert",
    "args": { "characters": "]" },
    "context": [
      { "key": "selection_empty", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
    ]
  },
  {
    "keys": ["}"],
    "command": "insert",
    "args": { "characters": "}" },
    "context": [
      { "key": "selection_empty", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
    ]
  },

  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
    ]
  },
  { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
    ]
  },

  { "keys": ["‘"], "command": "insert_snippet", "args": {"contents": "‘$0’"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
    ]
  },
  { "keys": ["‘"], "command": "insert_snippet", "args": {"contents": "‘${0:$SELECTION}’"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "‘$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^’", "match_all": true }
    ]
  },

  { "keys": ["“"], "command": "insert_snippet", "args": {"contents": "“$0”"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
    ]
  },
  { "keys": ["“"], "command": "insert_snippet", "args": {"contents": "“${0:$SELECTION}”"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "“$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^”", "match_all": true }
    ]
  },

  { "keys": ["‹"], "command": "insert_snippet", "args": {"contents": "‹$0›"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
    ]
  },
  { "keys": ["‹"], "command": "insert_snippet", "args": {"contents": "‹${0:$SELECTION}›"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "‹$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^›", "match_all": true }
    ]
  },

  { "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«$0»"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true }
    ]
  },
  { "keys": ["«"], "command": "insert_snippet", "args": {"contents": "«${0:$SELECTION}»"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "«$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^»", "match_all": true }
    ]
  },

  { "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
    ]
  },

  {
    "keys": ["super+alt+p"],
    "command": "search_script_reference",
    "context": [{ "key": "selector", "operand": "source.cs" }]
  },

  {
    "keys": ["ctrl+alt+space"],
    "command": "run_multiple_commands",
    "args": {
      "commands": [
        { "command": "hide_auto_complete", "context": "window" },
        { "command": "afn_show_filenames", "delay": 1, "context": "window" }
      ]
    }
  },

  {
    "keys": ["ctrl+ù"],
    "command": "show_panel",
    "args": { "panel": "console", "toggle": true }
  },
  { "keys": ["ctrl+shift+ù"], "command": "context_menu" },

  {
    "keys": ["super+k", "super+i"],
    "command": "toggle_color_schemes",
    "args": {
      "themes": {
        "light": "El Capitan (light).sublime-theme",
        "dark": "El Capitan (dark).sublime-theme"
      },
      "color_schemes": [
        {
          "settings": "Preferences.sublime-settings",
          "light": "Packages/User/SublimeLinter/base16-solarized.light (SL).tmTheme",
          "dark": "Packages/User/SublimeLinter/base16-tomorrow.dark (SL).tmTheme",
          "scopes": ["source"]
        },
        {
          "settings": "Widget.sublime-settings",
          "light": "Packages/User/Theme - El Capitan/Widget - El Capitan (light).stTheme",
          "dark": "Packages/User/Theme - El Capitan/Widget - El Capitan (dark).stTheme"
        },
        {
          "settings": "Markdown.sublime-settings",
          "light": "Packages/User/SublimeLinter/base16-solarized.light (SL).tmTheme",
          "dark": "Packages/User/SublimeLinter/base16-tomorrow.dark (SL).tmTheme",
          "scopes": ["text.html.markdown"]
        },
        {
          "settings": "Find Results.sublime-settings",
          "light": "Packages/User/Find Results (light).hidden-tmTheme",
          "dark": "Packages/User/Find Results (dark).hidden-tmTheme",
          "scopes": ["text.find-in-files"]
        },
        {
          "settings": "dired.sublime-settings",
          "light": "Packages/User/File Browser (light).hidden-tmTheme",
          "dark": "Packages/User/File Browser (dark).hidden-tmTheme",
          "scopes": ["text.dired", "text.dired_help", "text.dired_jump_list"]
        },
        {
          "settings": "dired-rename-mode.sublime-settings",
          "light": "Packages/User/File Browser Rename Mode (light).hidden-tmTheme",
          "dark": "Packages/User/File Browser Rename Mode (dark).hidden-tmTheme",
          "scopes": ["text.dired"]
        }
      ]
    }
  },

  {
    "keys": ["super+shift+h", "t"],
    "command": "toggle_tabs"
  },
  {
    "keys": ["super+shift+h", "m"],
    "command": "toggle_minimap"
  },
  {
    "keys": ["super+shift+h", "b"],
    "command": "toggle_side_bar"
  },
  {
    "keys": ["super+shift+h", "s"],
    "command": "toggle_status_bar"
  },
  {
    "keys": ["super+shift+h", "g"],
    "command": "toggle_setting",
    "args": { "setting": "gutter" }
  },
  {
    "keys": ["super+shift+h", "l"],
    "command": "toggle_setting",
    "args": { "setting": "highlight_line" }
  },

  {
    "keys": ["super+k", "super+b"],
    "command": "dired",
    "args": {
      "immediate": true,
      "single_pane": true
    }
  },

  {
    "keys": ["enter"],
    "command": "dired_select", "args": { "and_close": true },
    "context": [
      { "key": "selector", "operand": "text.dired" },
      { "key": "setting.dired_rename_mode", "operand": false }
    ]
  },

  {
    "keys": ["super+k", "super+z"],
    "command": "zoom_pane",
    "args": { "fraction": 0.25 },
    "context": [
      {  "key": "selector", "operand": "text.dired" }
    ]
  },

  { "keys": ["super+ctrl+right"], "command": "cycle_group" },
  { "keys": ["super+ctrl+left"], "command": "cycle_group", "args": { "forward": false } },

  { "keys": ["super+k", "super+w", "super+,"], "command": "destroy_pane", "args": { "direction": "self" } },
  { "keys": ["super+k", "super+w", "super+up"], "command": "destroy_pane", "args": { "direction": "up" } },
  { "keys": ["super+k", "super+w", "super+right"], "command": "destroy_pane", "args": { "direction": "right" } },
  { "keys": ["super+k", "super+w", "super+down"], "command": "destroy_pane", "args": { "direction": "down" } },
  { "keys": ["super+k", "super+w", "super+left"], "command": "destroy_pane", "args": { "direction": "left" } },

  { "keys": ["super+k", "super+up"], "command": "create_pane", "args": { "direction": "up", "give_focus": true } },
  { "keys": ["super+k", "super+right"], "command": "create_pane", "args": { "direction": "right", "give_focus": true } },
  { "keys": ["super+k", "super+down"], "command": "create_pane", "args": { "direction": "down", "give_focus": true } },
  { "keys": ["super+k", "super+left"], "command": "create_pane", "args": { "direction": "left", "give_focus": true } },

  { "keys": ["super+k", "super+shift+up"], "command": "create_pane_with_file", "args": { "direction": "up" } },
  { "keys": ["super+k", "super+shift+right"], "command": "create_pane_with_file", "args": { "direction": "right" } },
  { "keys": ["super+k", "super+shift+down"], "command": "create_pane_with_file", "args": { "direction": "down" } },
  { "keys": ["super+k", "super+shift+left"], "command": "create_pane_with_file", "args": { "direction": "left" } },

  { "keys": ["super+k", "super+alt+up"], "command": "create_pane_with_cloned_file", "args": { "direction": "up" } },
  { "keys": ["super+k", "super+alt+right"], "command": "create_pane_with_cloned_file", "args": { "direction": "right" } },
  { "keys": ["super+k", "super+alt+down"], "command": "create_pane_with_cloned_file", "args": { "direction": "down" } },
  { "keys": ["super+k", "super+alt+left"], "command": "create_pane_with_cloned_file", "args": { "direction": "left" } },

  { "keys": ["super+k", "super+ctrl+up"], "command": "pull_file_from_pane", "args": { "direction": "up" } },
  { "keys": ["super+k", "super+ctrl+right"], "command": "pull_file_from_pane", "args": { "direction": "right" } },
  { "keys": ["super+k", "super+ctrl+down"], "command": "pull_file_from_pane", "args": { "direction": "down" } },
  { "keys": ["super+k", "super+ctrl+left"], "command": "pull_file_from_pane", "args": { "direction": "left" } },

  { "keys": ["super+k", "super+ctrl+shift+up"], "command": "swap_files_with_pane", "args": { "direction": "up" } },
  { "keys": ["super+k", "super+ctrl+shift+right"], "command": "swap_files_with_pane", "args": { "direction": "right" } },
  { "keys": ["super+k", "super+ctrl+shift+down"], "command": "swap_files_with_pane", "args": { "direction": "down" } },
  { "keys": ["super+k", "super+ctrl+shift+left"], "command": "swap_files_with_pane", "args": { "direction": "left" } },

  {
    "keys": ["ctrl+;", "<character>"],
    "command": "easy_motion",
        "args": {"select_text": false}
  },
  {
      "keys": ["ctrl+;", "enter"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "enter"}
  },
  {
      "keys": ["ctrl+;", "alt+("],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "{"}
  },
  {
      "keys": ["ctrl+;", "alt+)"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "}"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+("],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "["}
  },
  {
      "keys": ["ctrl+;", "alt+shift+)"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "]"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+l"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "|"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+:"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "\\"}
  },
  {
      "keys": ["ctrl+;", "alt+'"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "‘"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+'"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "’"}
  },
  {
      "keys": ["ctrl+;", "alt+\""],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "“"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+\""],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "”"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+é"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "„"}
  },
  {
      "keys": ["ctrl+;", "alt+w"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "‹"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+w"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "›"}
  },
  {
      "keys": ["ctrl+;", "alt+è"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "«"}
  },
  {
      "keys": ["ctrl+;", "alt+shift+è"],
      "command": "easy_motion",
      "args": {"select_text": false, "character": "»"}
  },
  {
      "keys": ["ctrl+shift+;", "<character>"],
      "command": "easy_motion",
      "args": {"select_text": true}
  },
  {
      "keys": ["ctrl+shift+;", "enter"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "enter"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+("],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "{"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+)"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "}"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+("],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "["}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+)"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "]"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+l"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "|"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+:"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "\\"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+'"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "‘"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+'"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "’"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+\""],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "“"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+\""],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "”"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+é"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "„"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+w"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "‹"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+w"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "›"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+è"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "«"}
  },
  {
      "keys": ["ctrl+shift+;", "alt+shift+è"],
      "command": "easy_motion",
      "args": {"select_text": true, "character": "»"}
  },

  { "keys": ["super+k", "super+="], "command": "set_mark" },
  { "keys": ["super+k", "super+p"], "command": "goto_mark" },
  { "keys": ["super+k", "super+delete"], "command": "delete_to_mark" },

  { "keys": ["alt+="], "command": "mark_and_move_save" },
  { "keys": ["alt+shift+="], "command": "mark_and_move_clear" },
  { "keys": ["alt+shift+minus"], "command": "mark_and_move_prev" },
  { "keys": ["alt+minus"], "command": "mark_and_move_next" },
  { "keys": ["ctrl+shift+="], "command": "mark_and_move_recall" },
  { "keys": ["ctrl+="], "command": "mark_and_move_do_it_all" },

  { "keys": ["ctrl+shift+l"], "command": "goto_center_of_viewport" },
  { "keys": ["super+k", "b", "v"], "command": "goto_begining_of_viewport" },
  { "keys": ["super+k", "e", "v"], "command": "goto_end_of_viewport" },

  { "keys": ["ctrl+r", "x"], "command": "repeat_last_command" },
  { "keys": ["ctrl+r", "&"], "command": "repeat_last_command", "args": { "times": 1 } },
  { "keys": ["ctrl+r", "é"], "command": "repeat_last_command", "args": { "times": 2 } },
  { "keys": ["ctrl+r", "\""], "command": "repeat_last_command", "args": { "times": 3 } },
  { "keys": ["ctrl+r", "'"], "command": "repeat_last_command", "args": { "times": 4 } },
  { "keys": ["ctrl+r", "("], "command": "repeat_last_command", "args": { "times": 5 } },
  { "keys": ["ctrl+r", "§"], "command": "repeat_last_command", "args": { "times": 6 } },
  { "keys": ["ctrl+r", "è"], "command": "repeat_last_command", "args": { "times": 7 } },
  { "keys": ["ctrl+r", "!"], "command": "repeat_last_command", "args": { "times": 8 } },
  { "keys": ["ctrl+r", "ç"], "command": "repeat_last_command", "args": { "times": 9 } },
  { "keys": ["ctrl+r", "ctrl+r"], "command": "repeat_last_command", "args": { "times": 1 } },

  {
    "keys": ["&"],
    "command": "insert",
    "args": { "characters": "1" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["é"],
    "command": "insert",
    "args": { "characters": "2" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["\""],
    "command": "insert",
    "args": { "characters": "3" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["'"],
    "command": "insert",
    "args": { "characters": "4" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["("],
    "command": "insert",
    "args": { "characters": "5" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["§"],
    "command": "insert",
    "args": { "characters": "6" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["è"],
    "command": "insert",
    "args": { "characters": "7" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["!"],
    "command": "insert",
    "args": { "characters": "8" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["ç"],
    "command": "insert",
    "args": { "characters": "9" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },
  {
    "keys": ["à"],
    "command": "insert",
    "args": { "characters": "0" },
    "context": [
      { "key": "setting.repeat_last_command_panel" },
      { "key": "panel_has_focus" }
    ]
  },

  { "keys": ["super+&"], "command": "select_by_index", "args": { "index": 0 } },
  { "keys": ["super+é"], "command": "select_by_index", "args": { "index": 1 } },
  { "keys": ["super+\""], "command": "select_by_index", "args": { "index": 2 } },
  { "keys": ["super+'"], "command": "select_by_index", "args": { "index": 3 } },
  { "keys": ["super+("], "command": "select_by_index", "args": { "index": 4 } },
  { "keys": ["super+§"], "command": "select_by_index", "args": { "index": 5 } },
  { "keys": ["super+è"], "command": "select_by_index", "args": { "index": 6 } },
  { "keys": ["super+!"], "command": "select_by_index", "args": { "index": 7 } },
  { "keys": ["super+ç"], "command": "select_by_index", "args": { "index": 8 } },
  { "keys": ["super+à"], "command": "select_by_index", "args": { "index": 9 } },
  { "keys": ["ctrl+à"], "command": "focus_side_bar" }
]
